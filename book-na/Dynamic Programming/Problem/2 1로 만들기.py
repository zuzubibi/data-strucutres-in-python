# 문제
# 사용할 수 있는 연산 4가지가 있다. 1로 되게하는 횟수의 최솟값 출력하기
# 1. x가 5로 나누어떨어지면, 5로 나눔
# 2. x가 3으로 나누어떨어지면, 3으로 나눔
# 3. x가 2로 나누어떨어지면, 2로 나눔
# 4. x에서 1을 뺌
# -----------------------------------------------------------------
def solution(x):
    # 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
    d = [0]*30001

    # dynamic programming 진행(보텀업)
    for i in range(2, x+1):
        # 현재 수에서 1을 빼는 경우
        d[i] = d[i-1] +1
        
        # 현재 수가 2로 나누어 떨어지는 경우
        if i%2 == 0:
            d[i] = min(d[i], d[i//2]+1)
        
        # 현재 수가 3으로 나누어 떨어지는 경우
        if i%3 == 0:
            d[i] = min(d[i], d[i//3]+1)

        # 현재 수가 5로 나누어 떨어지는 경우
        if i%5 == 0:
            d[i] = min(d[i], d[i//5]+1)

    return  d[i]

# 스스로 다시 쳐보기 -------------------------------------------------------------
def solution(x):
    # dp table
    d = [0]*30001

    # dynamic programming
    for i in range(2, x+1):
        # 1로 뺄 경우
        d[i] = d[i-1] + 1

        # 2로 나눌 경우
        if i %2 ==0:
            d[i] = min(d[i], d[i//2]+1)
        
        # 3으로 나눌 경우
        if i%3 ==0:
            d[i] = min(d[i], d[i//3]+1)
        
        # 5로 나눌 경우
        if i%5 ==0:
            d[i] = min(d[i], d[i//5]+1)
    
    return d[i]



print(solution(26)) # 3